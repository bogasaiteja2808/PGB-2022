
Python:

Task1:
data type for a <class 'int'>
data type for b <class 'float'>
<class 'bool'>
String data type : Python
15 Typecasting
Integer & String com Python10
List : [10, 20, 'hello', 69]
Tuple : ('Ram', 56, 89, 'hello')
Set : {'Sets', 2.5, (1, 2, 3)}
Combined 2 data types using + 19.3
Combined list1 and list2: [10, 20, 'hello', 69, 8.9, 'lkj', 98]
Copied ['apple', 'banana', 'cherry']
Added one element in fruits: ['apple', 'banana', 'cherry', 'Grapes']
Removed all elements in fruits []
cherry appeared 1 number of times
Cars list is added to fruits list ['apple', 'banana', 'cherry', 'Ford', 'BMW', 'Volvo']
Position of cherry in list 2
Orange is added at 2nd position in list ['apple', 'banana', 'Orange', 'cherry', 'Ford', 'BMW', 'Volvo']
Element is removed at 2nd index position ['apple', 'banana', 'cherry', 'Ford', 'BMW', 'Volvo']
Banana is removed ['apple', 'cherry']
['cherry', 'apple']
Cars are sorted ['BMW', 'Ford', 'Volvo']



Task2:

String is converted to uppercase LIKHITHA
String is converted to lowercase likhitha
his occured 2 number of times in given string
String ends with a True
String has alphabeticals or not: True
First character is capitalised Python
o is found at position 4
Reversed the string using slicing nohtyp

Task3:

Tuple: <class 'tuple'>
30 is present 3 number of times in tuple
hello is present at index pos 3
a dictionary with 3 different keys, all with the value '5' using inbuilt method : {'k1': 5, 'k2': 5, 'k3': 5}
Dictionary Created {1: 'Hello', 2: 'Python', 3: 7}
Value present at key3 7
Removing 2nd key in dictionary {1: 'Hello', 3: 7}
Removed last inserted element {1: 'Hello'}
Element is added in set {'mango', 'cars', 'apples', 'buses', 23}
Element is removed in set {'mango', 'cars', 'apples', 23}
Elements only present in setx: {'a', 'b', 'c'}
Removed the items that are common in both sets ['a', 'c', 'b'] ['y', 'x', 'z']
Checking elements present in 2 sets are equal or not: False
Return True if all items in set x are present in set y:  True
Return True if all items in set y are present in set x: False
Return a set that contains all items from both sets, except items that are present in both sets:  {9, 7}
Return a set that contains all items from both sets, duplicates are excluded:  {1, 2, 3, 6, 7, 9}
['y', 'x', 'z', 'a', 'c', 'b']
