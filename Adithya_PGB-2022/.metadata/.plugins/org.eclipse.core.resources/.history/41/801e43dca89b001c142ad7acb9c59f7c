package day3;
import java.util.*;
interface Person{
	void eat();
	void sleep();
}
abstract class underGraduate implements Person{
	abstract void study();
	void learn() {
		System.out.println("Learning");
	}
}
class Student extends underGraduate implements Person{
	int id;
	String name;
	Student(int id,String name){
		this.id=id;
		this.name=name;
	}
	@Override
	public void eat() {
		System.out.println("eating");
	}
	@Override
	public void sleep() {
		System.out.println("Sleeping");
	}
	@Override
	void study() {
		System.out.println("Studying");
	}
	public static void main(String[] args) {
		Student st = new Student(2, "Adithya");
		st.eat();
		st.sleep();
		st.study();
		
		HashMap<Student,String>hm=new HashMap();
		List<Student>l=new LinkedList();
		Set<Student>s=new HashSet();
		int[]id= {10,11,12,13,14};
		String[]name= {"akhil","Dheeraj","Balaji","kiran","ravi"};
		String[]colours= {"red","blue","green","yellow","orange"};
		for(int i=0;i<5;i++) {
			l.add(new Student(id[i],name[i]));
		}
		System.out.println("List output");
		for(Student stu:l) {
			System.out.println(stu.id+" "+stu.name);
		}
		for(int i=0;i<5;i++) {
			s.add(new Student(id[i],name[i]));
		}
		System.out.println("Set output");
		for(Student stu:s) {
			System.out.println(stu.id+" "+stu.name);
		}
		for(int i=0;i<5;i++) {
			hm.put(new Student(id[i],name[i]), colours[i]);
		}
		System.out.println("Map output");
		for(Map.Entry<Student, String>f:hm.entrySet()) {
			System.out.println(f.getKey().id+" "+f.getKey().name);
		}
		Collections.sort(l,new Comparator<Student>(){
			public int compare(Student a,Student b){
				return b.id-a.id;
			}
		});
		l.stream().forEach((c)->System.out.println(c.id));
	}
}