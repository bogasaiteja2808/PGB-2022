package day3;
import java.util.*;
interface Person{
	void eat();
	void sleep();
}
abstract class underGraduate implements Person{
	abstract void study();
}
class Student extends underGraduate implements Person{
	int id;
	String name;
	Student(int id,String name){
		this.id=id;
		this.name=name;
	}
	@Override
	public void eat() {
		System.out.println("eating");
	}
	@Override
	public void sleep() {
		System.out.println("Sleeping");
	}
	@Override
	void study() {
		System.out.println("Studying");
	}
}
class func implements Comparator<Student>{
	public int compare(Student a,Student b){
		return b.id-a.id;
	}
}
public class Student{
	public static void main(String[] args) {
		HashMap<swift,String>hm=new HashMap();
		List<swift>l1=new LinkedList();
		for(int i=0;i<5;i++){
			l1.add(new swift(i));
		}
		String[] l2={"red","white","blue","green","yellow"};
		for(int i=0;i<5;i++){
			hm.put(l1.get(i),l2[i]);
		}
		Set<car>s=new HashSet();
		for(int i=0;i<5;i++){
			s.add(new swift(i));
		}
		Collections.sort(l1,new func());
		l1.stream().forEach((c)->System.out.println(c.id));
		car.print();
	}
}